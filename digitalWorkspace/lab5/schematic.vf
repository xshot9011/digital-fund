////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : schematic.vf
// /___/   /\     Timestamp : 10/07/2019 20:02:35
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/digitalWorkspace/lab5/schematic.vf -w C:/digitalWorkspace/lab5/schematic.sch
//Design Name: schematic
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_schematic(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 100 ps / 10 ps

module FJKP_HXILINX_schematic(Q, C, J, K, PRE);
   
   output             Q;

   input 	      C;	
   input              J;
   input              K;
   input 	      PRE;	
   
   parameter INIT = 1'b1;
   reg                Q = INIT;

   
  always @(posedge C or posedge PRE)
     begin
	if (PRE)
	  Q <= 1'b1;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module schematic(CLEAR, 
                 CLOCK, 
                 b, 
                 c, 
                 COMMON0, 
                 d, 
                 XLXN_207, 
                 XLXN_208, 
                 XLXN_209, 
                 XLXN_210, 
                 XLXN_211, 
                 XLXN_212, 
                 XLXN_213);

    input CLEAR;
   (* CLOCK_DEDICATED_ROUTE = "TRUE" *) 
    input CLOCK;
   output b;
   output c;
   (* LOC = "P44" *) 
   output COMMON0;
   output d;
   output XLXN_207;
   output XLXN_208;
   output XLXN_209;
   output XLXN_210;
   output XLXN_211;
   output XLXN_212;
   output XLXN_213;
   
   wire XLXN_47;
   wire XLXN_53;
   wire XLXN_87;
   wire XLXN_200;
   wire b_DUMMY;
   wire c_DUMMY;
   wire d_DUMMY;
   
   assign b = b_DUMMY;
   assign c = c_DUMMY;
   assign d = d_DUMMY;
   (* HU_SET = "XLXI_13_0" *) 
   FJKC_HXILINX_schematic  XLXI_13 (.C(CLOCK), 
                                   .CLR(CLEAR), 
                                   .J(d_DUMMY), 
                                   .K(XLXN_53), 
                                   .Q(c_DUMMY));
   (* HU_SET = "XLXI_14_1" *) 
   FJKC_HXILINX_schematic  XLXI_14 (.C(CLOCK), 
                                   .CLR(CLEAR), 
                                   .J(XLXN_87), 
                                   .K(c_DUMMY), 
                                   .Q(b_DUMMY));
   (* HU_SET = "XLXI_15_2" *) 
   FJKP_HXILINX_schematic  XLXI_15 (.C(CLOCK), 
                                   .J(XLXN_47), 
                                   .K(XLXN_47), 
                                   .PRE(CLEAR), 
                                   .Q(d_DUMMY));
   VCC  XLXI_18 (.P(XLXN_47));
   OR2  XLXI_19 (.I0(b_DUMMY), 
                .I1(d_DUMMY), 
                .O(XLXN_53));
   AND2  XLXI_20 (.I0(d_DUMMY), 
                 .I1(c_DUMMY), 
                 .O(XLXN_87));
   GND  XLXI_71 (.G(COMMON0));
   GND  XLXI_75 (.G(XLXN_200));
   decoder7segment  XLXI_77 (.aa(XLXN_200), 
                            .bb(b_DUMMY), 
                            .cc(c_DUMMY), 
                            .dd(d_DUMMY), 
                            .a(XLXN_207), 
                            .b(XLXN_209), 
                            .c(XLXN_210), 
                            .d(XLXN_208), 
                            .e(XLXN_211), 
                            .f(XLXN_212), 
                            .g(XLXN_213));
endmodule

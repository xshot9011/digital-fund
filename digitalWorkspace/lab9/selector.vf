////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : selector.vf
// /___/   /\     Timestamp : 11/11/2019 12:17:36
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/digitalWorkspace/lab9/selector.vf -w C:/digitalWorkspace/lab9/selector.sch
//Design Name: selector
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module FJKC_HXILINX_selector(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module selector(plus, 
                shl, 
                sub, 
                xxor, 
                en_plus, 
                en_shl, 
                en_sub, 
                en_xor);

    input plus;
    input shl;
    input sub;
    input xxor;
   output en_plus;
   output en_shl;
   output en_sub;
   output en_xor;
   
   wire XLXN_1;
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire en_shl_DUMMY;
   wire en_sub_DUMMY;
   wire en_plus_DUMMY;
   wire en_xor_DUMMY;
   
   assign en_plus = en_plus_DUMMY;
   assign en_shl = en_shl_DUMMY;
   assign en_sub = en_sub_DUMMY;
   assign en_xor = en_xor_DUMMY;
   (* HU_SET = "XLXI_1_30" *) 
   FJKC_HXILINX_selector  XLXI_1 (.C(plus), 
                                 .CLR(XLXN_13), 
                                 .J(XLXN_1), 
                                 .K(XLXN_1), 
                                 .Q(en_plus_DUMMY));
   (* HU_SET = "XLXI_2_31" *) 
   FJKC_HXILINX_selector  XLXI_2 (.C(sub), 
                                 .CLR(XLXN_15), 
                                 .J(XLXN_1), 
                                 .K(XLXN_1), 
                                 .Q(en_sub_DUMMY));
   (* HU_SET = "XLXI_3_32" *) 
   FJKC_HXILINX_selector  XLXI_3 (.C(xxor), 
                                 .CLR(XLXN_16), 
                                 .J(XLXN_1), 
                                 .K(XLXN_1), 
                                 .Q(en_xor_DUMMY));
   (* HU_SET = "XLXI_4_33" *) 
   FJKC_HXILINX_selector  XLXI_4 (.C(shl), 
                                 .CLR(XLXN_17), 
                                 .J(XLXN_1), 
                                 .K(XLXN_1), 
                                 .Q(en_shl_DUMMY));
   VCC  XLXI_5 (.P(XLXN_1));
   OR3  XLXI_10 (.I0(en_shl_DUMMY), 
                .I1(en_xor_DUMMY), 
                .I2(en_sub_DUMMY), 
                .O(XLXN_13));
   OR3  XLXI_11 (.I0(en_shl_DUMMY), 
                .I1(en_xor_DUMMY), 
                .I2(en_plus_DUMMY), 
                .O(XLXN_15));
   OR3  XLXI_12 (.I0(en_shl_DUMMY), 
                .I1(en_sub_DUMMY), 
                .I2(en_plus_DUMMY), 
                .O(XLXN_16));
   OR3  XLXI_13 (.I0(en_xor_DUMMY), 
                .I1(en_sub_DUMMY), 
                .I2(en_plus_DUMMY), 
                .O(XLXN_17));
endmodule
